#!/usr/bin/env bash

DRY_RUN=0

function printHelp {
  echo "Utility to run games and applications in separate X on discrete Nvidia graphic card"
  echo "Usage: "
  echo "nvidia-xrun [<options>] [<app>]"
  echo "Options: "
  echo "  -d    Dry run - prints the final command but does not execute it"
}

function execute {
  if [[ ${DRY_RUN} -ne 0 ]]; then
    echo ">>Dry run. Command: $@"
  else
    eval "$@"
  fi
}

# parse command line flags
while [[ "${1:0:1}" == "-" ]]; do
  case "$1" in
    -d)
      DRY_RUN=1
      ;;
    -*)
      printHelp
      exit 1
      ;;
  esac
  shift 1
done

if [[ $EUID -eq 0 ]]; then
   echo "This script must not be run as root" >&2
   exit 1
fi

# calculate current VT
LVT="$(fgconsole)"

# calculate first usable display
XNUM=0
while [[ -e "/tmp/.X11-unix/X$XNUM" ]]
do
  XNUM=$(( $XNUM + 1 ))
done

NEWDISP=":$XNUM"

if [[ -n "$*" ]] # generate exec line if arguments are given
then
  # test if executable exists in path
  if [[ -x "$(which "$1" 2> /dev/null)" ]]
  then
    # generate exec line
    EXECL="$(which "$1")"
  # test if executable exists on disk
  elif [[ -e "$(realpath "$1")" ]]
  then
    # generate exec line
    EXECL="$(realpath "$1")"
  else
    echo "$1: No such executable!"
    exit 1
  fi
  shift 1
  EXECL="$EXECL $*"
else # prepare to start new X sessions if no arguments passed
  EXECL=""
fi

EXECL="/etc/X11/xinit/nvidia-xinitrc \"$EXECL\""

COMMAND="xinit $EXECL -- $NEWDISP vt$LVT -nolisten tcp -br -config nvidia-xorg.conf -configdir nvidia-xorg.conf.d"

# ---------- TURNING ON GPU ------------
execute "sudo nvidia-toggle -v on"

# ---------- EXECUTING COMMAND --------
execute "${COMMAND}"

# --------- TURNING OFF GPU ----------
execute "sudo nvidia-toggle -v off"
